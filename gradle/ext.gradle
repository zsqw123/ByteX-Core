Properties properties = new Properties()
try {
    File publishFile = new File(gradle.gradleUserHomeDir, "publish.properties")
    if (publishFile.exists()) {
        println("publish prop exists")
        publishFile.withDataInputStream {
            properties.load(it)
        }
    } else {
        println("publish prop not exists")
    }
} catch (ignored) {
}

try {
    def projectUploadPropFile = project.rootProject.file('upload.properties')
    projectUploadPropFile.withDataInputStream {
        properties.load(it)
    }
} catch (ignored) {
}

def uploadToMaven = "true" == properties.getProperty('upload2Maven')
def uploadToJCenter = "true" == properties.getProperty('upload2JCenter')
def useSnapshotMaven = "true" == properties.getProperty('useSnapshotMaven')

ext {
    upload2Maven = uploadToMaven
    upload2JCenter = uploadToJCenter
    useSnapshot = useSnapshotMaven

    upload_user_name = properties.getProperty("mavenCentralUsername", "")
    upload_password = properties.getProperty("mavenCentralPassword", "")
    githubEmail = properties.getProperty("githubEmail", "")

    upload_group = 'host.bytedance.byteX'
    upload_version = "0.3.0"
    upload_dir = project.rootProject.file('gradle_plugins').path
    gradle_version = '3.5.3'
    gson_version = '2.8.2'
    asm_version = '9.2'
    guava_version = '23.0'
    ByteX_Version = upload_version
    gradle_compat_version = "1.1.0.2"

    ext["signing.keyId"] = properties.getProperty("signing.keyId")
    ext["signing.password"] = properties.getProperty("signing.password")
    ext["signing.secretKeyRingFile"] = properties.getProperty("signing.secretKeyRingFile")
}
println("upload2Maven:$upload2Maven")
println("useSnapshot:$useSnapshot")
println("upload_user_name:$upload_user_name")
println("upload_password:$upload_password")
println("upload_group:$upload_group")
println("upload_version:$upload_version")
